name: app
type: php:8.2
disk: 1024

build:
  flavor: none

variables:
  env:
    APP_ENV: "prod"
    APP_DEBUG: "0"
    # Conserver la variable CORS, bien qu'elle ne soit pas la cause de l'erreur 500
    CORS_ALLOW_ORIGIN: "^https?://([^/]+\\.)?main-bvxea6i-rm5gtsnixyao4\\.fr-3\\.platformsh\\.site$"
    # D√©finition de la relation persistante. Le build hook va forcer sa lecture.
    MONGODB_URL: "value-from-relation:mongodb.url"
    MONGODB_AUTH_SOURCE: "value-from-relation:mongodb.auth_source"
    MONGODB_DB: "value-from-relation:mongodb.database"

web:
  locations:
    "/":
      root: "public"
      passthru: "/index.php"
      scripts: true
      allow: true

relationships:
  database: "db:mysql"
  mongodb: "mongodb:mongodb"

dependencies:
  php:
    composer/composer: "^2"

mounts:
  "/var": "shared:files"

hooks:
  build: |
    set -e
    # üö® CORRECTION CRITIQUE üö®: Ajout de --no-scripts pour contourner l'√©chec de cache:clear/warmup
    # automatique de Composer, caus√© par la configuration doctrine_mongodb qui n'est pas charg√©e.
    composer install --no-dev --no-progress --prefer-dist --optimize-autoloader --ignore-platform-req=ext-mongodb --no-scripts

    # üí• COMMANDE CRITIQUE : G√©n√®re un fichier var/cache/.env.local.php au build 
    # avec les valeurs r√©elles de MONGODB_URL, garantissant leur persistance au runtime.
    php vendor/bin/platformsh-config inject-env --prefix=MONGODB_ --relation=mongodb --output-file=var/cache/.env.local.php

  deploy: |
    set -e
    # Le cache clear s'ex√©cute ici. Le MONGODB_URL est maintenant disponible 
    # gr√¢ce au fichier .env.local.php g√©n√©r√© dans le hook build.
    php bin/console cache:clear --env=prod --no-debug
    php bin/console cache:warmup --env=prod
    rm -rf var/log/*

runtime:
  extensions:
    - gd
    - intl
    - pdo
    - pdo_mysql
    - opcache
    - mongodb
