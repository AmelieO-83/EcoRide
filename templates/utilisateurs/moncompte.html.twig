{% extends 'base.html.twig' %}

{% block title %}Mon Compte | EcoRide{% endblock %}

{% block body %}
<div class="container mt-5" style="max-width:900px;">
  <!-- NAVIGATION DES ONGLET -->
  <ul class="nav nav-tabs mb-3" id="profilTabs" role="tablist">
    <li class="nav-item" role="presentation">
      <button class="nav-link active" id="tab-profil" data-bs-toggle="tab" data-bs-target="#pane-profil" type="button" role="tab" aria-controls="pane-profil" aria-selected="true">
        Mon profil
      </button>
    </li>
    <li class="nav-item" role="presentation">
      <button class="nav-link" id="tab-voitures" data-bs-toggle="tab" data-bs-target="#pane-voitures" type="button" role="tab" aria-controls="pane-voitures" aria-selected="false">
        Mes voitures
      </button>
    </li>
    <li class="nav-item" role="presentation">
      <button class="nav-link" id="tab-trajets" data-bs-toggle="tab" data-bs-target="#pane-trajets" type="button" role="tab" aria-controls="pane-trajets" aria-selected="false">
        Trajets proposés
      </button>
    </li>
    <li class="nav-item" role="presentation">
      <button class="nav-link" id="tab-participations" data-bs-toggle="tab" data-bs-target="#pane-participations" type="button" role="tab" aria-controls="pane-participations" aria-selected="false">
        Mes participations
      </button>
    </li>
  </ul>

  <div class="tab-content" id="profilTabsContent">
    <!-- Onglet Profil -->
    <div class="tab-pane fade show active" id="pane-profil" role="tabpanel" aria-labelledby="tab-profil">
      <h2 class="mb-4">Mon profil</h2>
      <div id="message" class="alert d-none"></div>
      <div id="popupSuccess" class="alert alert-success d-none" role="alert"></div>
      <form id="profileForm">
        <div class="mb-3">
          <label for="prenom" class="form-label">Prénom</label>
          <input type="text" id="prenom" name="prenom" class="form-control" required>
        </div>
        <div class="mb-3">
          <label for="nom" class="form-label">Nom</label>
          <input type="text" id="nom" name="nom" class="form-control" required>
        </div>
        <div class="mb-3">
          <label for="email" class="form-label">Email</label>
          <input type="email" id="email" name="email" class="form-control" required>
        </div>
        <div class="mb-3">
          <label for="ville" class="form-label">Ville</label>
          <input type="text" id="ville" name="ville" class="form-control">
        </div>
        <div class="mb-3">
          <label for="dateNaissance" class="form-label">Date de naissance</label>
          <input type="date" id="dateNaissance" name="dateNaissance" class="form-control">
        </div>
        <div class="mb-3">
          <label for="password" class="form-label">Nouveau mot de passe</label>
          <input type="password" id="password" name="password" class="form-control">
          <div class="form-text">Laissez vide pour ne pas modifier.</div>
        </div>
        <button type="submit" class="btn btn-primary w-100">Enregistrer</button>
      </form>
    </div>

    <!-- Onglet Voitures -->
    <div class="tab-pane fade" id="pane-voitures" role="tabpanel" aria-labelledby="tab-voitures">
      <h2 class="mb-3">Mes voitures</h2>
      <div id="carList" class="list-group mb-2"></div>
      <a href="{{ path('voiture_ajouter') }}" class="btn btn-primary">Ajouter une voiture</a>
    </div>

    <!-- Onglet Trajets proposés -->
    <div class="tab-pane fade" id="pane-trajets" role="tabpanel" aria-labelledby="tab-trajets">
      <h2 class="mb-3">Trajets proposés</h2>
      <div id="listeProposes" class="list-group mb-2"></div>
      <a href="{{ path('proposer_trajet') }}" class="btn btn-primary">Proposer un covoiturage</a>
    </div>

    <!-- Onglet Participations -->
    <div class="tab-pane fade" id="pane-participations" role="tabpanel" aria-labelledby="tab-participations">
      <h2 class="mb-3">Mes participations</h2>
      <div id="listeParticipe" class="list-group mb-2"></div>
      <a href="{{ path('covoiturages_list') }}" class="btn btn-primary">Rechercher un covoiturage</a>
    </div>
  </div>
</div>

<!-- Modal succès participation -->
<div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="successModalLabel">Participation confirmée</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
      </div>
      <div class="modal-body text-center">
        <p>Votre participation a bien été prise en compte !</p>
      </div>
      <div class="modal-footer justify-content-center">
        <button type="button" class="btn btn-success" data-bs-dismiss="modal">OK</button>
      </div>
    </div>
  </div>
</div>
{% endblock %}

{% block javascripts %}
<script>
(async () => {
  const token = localStorage.getItem('ecoride_token');
  if (!token) return window.location.href = '{{ path("connexion") }}';

  // Modal de succès si participation
  if (new URLSearchParams(window.location.search).get('participation') === 'success') {
    new bootstrap.Modal(document.getElementById('successModal')).show();
  }

  // Succès après ajout de covoiturage
  const popup = document.getElementById('popupSuccess');
  const successMsg = localStorage.getItem('success_message');
  if (successMsg) {
    popup.textContent = successMsg;
    popup.classList.remove('d-none');
    localStorage.removeItem('success_message');

    // Recharge immédiatement les trajets proposés si succès
    await loadTrajetsProposes();
  }

  async function fetchJson(url) {
    const resp = await fetch(url, {
      headers: {
        'X-AUTH-TOKEN': token,
        'Accept': 'application/json'
      }
    });
    return resp.ok ? resp.json() : null;
  }

  // Charger Profil
  const user = await fetchJson('{{ path("api_utilisateurs_profil") }}');
  if (!user) return window.location.href = '{{ path("connexion") }}';

  document.getElementById('prenom').value        = user.prenom || '';
  document.getElementById('nom').value           = user.nom    || '';
  document.getElementById('email').value         = user.email  || '';
  document.getElementById('ville').value         = user.ville  || '';
  document.getElementById('dateNaissance').value = user.dateNaissance?.split('T')[0] || '';

  // Voitures
  const cars = await fetchJson('{{ path("api_voitures_list") }}') || [];
  document.getElementById('carList').innerHTML = cars.length
    ? cars.map(v => {
        const marqueLabel = v.marque?.libelle || '';
        return `<div class="list-group-item d-flex justify-content-between align-items-center">
          <span>${marqueLabel} ${v.modele} – ${v.couleur}</span>
          <a href="#" class="text-danger link-delete-car" data-id="${v.id}">Supprimer</a>
        </div>`;
      }).join('')
    : '<div class="text-muted">Aucune voiture enregistrée.</div>';

  document.getElementById('carList').addEventListener('click', async e => {
    if (!e.target.matches('.link-delete-car')) return;
    e.preventDefault();
    const id = e.target.dataset.id;
    if (!confirm('Voulez-vous vraiment supprimer cette voiture ?')) return;
    const resp = await fetch(
      '{{ path("api_voitures_delete", {"id":"ID_PLACEHOLDER"}) }}'.replace('ID_PLACEHOLDER', id),
      { method: 'DELETE', headers: { 'X-AUTH-TOKEN': token } }
    );
    if (resp.ok) location.reload();
    else alert('Impossible de supprimer la voiture.');
  });

  // Trajets proposés
  async function loadTrajetsProposes() {
    const trajets = await fetchJson('{{ path("api_covoiturages_proposes") }}') || [];
    console.log("Trajets proposés reçus :", trajets);

    document.getElementById('listeProposes').innerHTML = trajets.length
      ? trajets.map(t => {
          const id = parseInt(t.id, 10);
          const date = t.date ? t.date.split('T')[0] : '??';
          return `<div class="list-group-item d-flex justify-content-between align-items-center">
            <span>${t.villeDepart} → ${t.villeArrivee} le ${date}</span>
            <a href="#" class="text-danger link-annuler-covoiturage" data-id="${id}">Annuler</a>
          </div>`;
        }).join('')
      : '<div class="text-muted">Aucun covoiturage proposé.</div>';
  }
  await loadTrajetsProposes();
  document.getElementById('listeProposes').addEventListener('click', async e => {
    if (!e.target.matches('.link-annuler-covoiturage')) return;
    e.preventDefault();
    const id = e.target.dataset.id;
    if (!confirm('Voulez-vous vraiment annuler ce covoiturage ?')) return;

    const resp = await fetch(`/api/covoiturages/${id}`, {
      method: 'DELETE',
      headers: { 'X-AUTH-TOKEN': token }
    });

    if (resp.ok) {
      await loadTrajetsProposes(); // Recharge la liste
    } else {
      alert('Impossible d’annuler le covoiturage.');
    }
  });

  // Participations
  async function loadParticipations() {
    const parts = await fetchJson('{{ path("api_participation_list") }}') || [];
    document.getElementById('listeParticipe').innerHTML = parts.length
      ? parts.map(p => {
          return `<div class="list-group-item d-flex justify-content-between align-items-center">
            <span>${p.covoiturage.villeDepart} → ${p.covoiturage.villeArrivee} le ${p.covoiturage.date.split('T')[0]}</span>
            <a href="#" class="text-danger link-annuler" data-id="${p.id}">Annuler</a>
          </div>`;
        }).join('')
      : '<div class="text-muted">Aucune participation pour l’instant.</div>';
  }
  await loadParticipations();

  document.getElementById('listeParticipe').addEventListener('click', async e => {
    if (!e.target.matches('.link-annuler')) return;
    e.preventDefault();
    const id = e.target.dataset.id;
    if (!confirm('Voulez-vous vraiment annuler cette participation ?')) return;
    const resp = await fetch(`/api/participations/${id}`, {
      method: 'DELETE',
      headers: { 'X-AUTH-TOKEN': token }
    });
    if (resp.ok) await loadParticipations();
    else alert('Impossible d’annuler la participation.');
  });

  document.getElementById('successModal')
    .addEventListener('hidden.bs.modal', loadParticipations);

  document.getElementById('profileForm').addEventListener('submit', async e => {
    e.preventDefault();
    const msg = document.getElementById('message'); msg.classList.add('d-none');
    const payload = {
      prenom: document.getElementById('prenom').value.trim(),
      nom: document.getElementById('nom').value.trim(),
      email: document.getElementById('email').value.trim(),
      ville: document.getElementById('ville').value.trim(),
      dateNaissance: document.getElementById('dateNaissance').value
    };
    const pwd = document.getElementById('password').value;
    if (pwd) payload.password = pwd;
    try {
      const res = await fetch('{{ path("api_utilisateurs_modifier") }}', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'X-AUTH-TOKEN': token
        },
        body: JSON.stringify(payload)
      });
      const err = await (res.ok ? {} : res.json());
      msg.className = res.ok ? 'alert alert-success' : 'alert alert-danger';
      msg.textContent = res.ok ? 'Profil mis à jour avec succès.' : err.error || 'Erreur lors de la mise à jour.';
    } catch {
      msg.className = 'alert alert-danger';
      msg.textContent = 'Impossible de contacter le serveur.';
    }
    msg.classList.remove('d-none');
  });
})();
</script>
{% endblock %}
