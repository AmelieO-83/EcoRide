{# templates/utilisateurs/moncompte.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Mon Compte | EcoRide{% endblock %}

{% block body %}
<div class="container mt-5">
  <div class="row">
    {# Profil #}
    <div class="col-lg-6 mb-4">
      <h2 class="mb-4">Mon profil</h2>
      <div id="message" class="alert d-none"></div>
      <form id="profileForm">
        <div class="mb-3">
          <label for="prenom" class="form-label">Prénom</label>
          <input type="text" id="prenom" name="prenom" class="form-control" required>
        </div>
        <div class="mb-3">
          <label for="nom" class="form-label">Nom</label>
          <input type="text" id="nom" name="nom" class="form-control" required>
        </div>
        <div class="mb-3">
          <label for="email" class="form-label">Email</label>
          <input type="email" id="email" name="email" class="form-control" required>
        </div>
        <div class="mb-3">
          <label for="ville" class="form-label">Ville</label>
          <input type="text" id="ville" name="ville" class="form-control">
        </div>
        <div class="mb-3">
          <label for="dateNaissance" class="form-label">Date de naissance</label>
          <input type="date" id="dateNaissance" name="dateNaissance" class="form-control">
        </div>
        <div class="mb-3">
          <label for="password" class="form-label">Nouveau mot de passe</label>
          <input type="password" id="password" name="password" class="form-control">
          <div class="form-text">Laissez vide pour ne pas modifier.</div>
        </div>
        <button type="submit" class="btn btn-primary w-100">Enregistrer</button>
      </form>
    </div>

    {# Voitures, Proposés, Participations #}
    <div class="col-lg-6 mb-4">
      <div class="mb-4">
        <h2 class="mb-3">Mes voitures</h2>
        <div id="carList" class="list-group mb-2"></div>
        <a href="{{ path('voiture_ajouter') }}" class="btn btn-primary">Ajouter une voiture</a>
      </div>
      <div class="mb-4">
        <h2 class="mb-3">Trajets proposés</h2>
        <div id="listeProposes" class="list-group mb-2"></div>
        <a href="{{ path('proposer_trajet') }}" class="btn btn-primary">Proposer un covoiturage</a>
      </div>
      <div class="mb-4">
        <h2 class="mb-3">Mes participations</h2>
        <div id="listeParticipe" class="list-group mb-2"></div>
        <a href="{{ path('covoiturages_list') }}" class="btn btn-primary">Rechercher un covoiturage</a>
      </div>
    </div>
  </div>
</div>

{# Modal succès participation #}
<div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="successModalLabel">Participation confirmée</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
      </div>
      <div class="modal-body text-center">
        <p>Votre participation a bien été prise en compte !</p>
      </div>
      <div class="modal-footer justify-content-center">
        <button type="button" class="btn btn-success" data-bs-dismiss="modal">OK</button>
      </div>
    </div>
  </div>
</div>
{% endblock %}

{% block javascripts %}
<script>
(async () => {
  const token = localStorage.getItem('ecoride_token');
  if (!token) return window.location.href = '{{ path("connexion") }}';

  // Modal de succès si flag
  if (new URLSearchParams(window.location.search).get('participation') === 'success') {
    new bootstrap.Modal(document.getElementById('successModal')).show();
  }

  // Utility fetch JSON
  async function fetchJson(url) {
    const resp = await fetch(url, {
      headers: {
        'X-AUTH-TOKEN': token,
        'Accept': 'application/json'
      }
    });
    return resp.ok ? resp.json() : null;
  }

  // Charger Profil et rediriger si nécessaire
  let user;
  try {
    user = await fetchJson('{{ path("api_utilisateurs_profil") }}');
    if (!user) throw new Error();
  } catch {
    return window.location.href = '{{ path("connexion") }}';
  }

  // Mes voitures
  const cars = await fetchJson(`/api/voitures?user=${user.id}`) || [];
  document.getElementById('carList').innerHTML = cars.length
    ? cars.map(v => `<div class="list-group-item">${v.marque.nom} ${v.modele} – ${v.couleur}</div>`).join('')
    : '<div class="text-muted">Aucune voiture enregistrée.</div>';

  // Mes trajets proposés
  const trips = await fetchJson('{{ path("api_covoiturages_list") }}') || [];
  const myTrips = trips.filter(t => t.chauffeur.id === user.id);
  document.getElementById('listeProposes').innerHTML = myTrips.length
    ? myTrips.map(t => `<div class="list-group-item">${t.villeDepart} → ${t.villeArrivee} le ${t.date.split('T')[0]}</div>`).join('')
    : '<div class="text-muted">Aucun trajet proposé.</div>';

  // Mes participations
  async function loadParticipations() {
    const parts = await fetchJson('{{ path("api_participation_list") }}') || [];
    document.getElementById('listeParticipe').innerHTML = parts.length
      ? parts.map(p => `<div class="list-group-item">${p.covoiturage.villeDepart} → ${p.covoiturage.villeArrivee} le ${p.covoiturage.date.split('T')[0]}</div>`).join('')
      : '<div class="text-muted">Aucune participation pour l’instant.</div>';
  }
  await loadParticipations();

  // Après succès, recharger participations lorsque le modal est fermé
  const modalEl = document.getElementById('successModal');
  modalEl.addEventListener('hidden.bs.modal', loadParticipations);

  // Soumission Profil
  document.getElementById('profileForm').addEventListener('submit', async e => {
    e.preventDefault();
    const msg = document.getElementById('message'); msg.classList.add('d-none');
    const payload = {
      prenom: document.getElementById('prenom').value.trim(),
      nom: document.getElementById('nom').value.trim(),
      email: document.getElementById('email').value.trim(),
      ville: document.getElementById('ville').value.trim(),
      dateNaissance: document.getElementById('dateNaissance').value
    };
    const pwd = document.getElementById('password').value;
    if (pwd) payload.password = pwd;
    try {
      const res = await fetch('{{ path("api_utilisateurs_modifier") }}', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'X-AUTH-TOKEN': token
        },
        body: JSON.stringify(payload)
      });
      const err = await (res.ok ? {} : res.json());
      msg.className = res.ok ? 'alert alert-success' : 'alert alert-danger';
      msg.textContent = res.ok ? 'Profil mis à jour avec succès.' : err.error || 'Erreur lors de la mise à jour.';
    } catch {
      msg.className = 'alert alert-danger'; msg.textContent = 'Impossible de contacter le serveur.';
    }
    msg.classList.remove('d-none');
  });
})();
</script>
{% endblock %}
